@model RGECMS.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<script>
    function myFunction1() {
        var x = document.getElementById("myInput1");
        if (x.type === "password") {
            x.type = "text";
        } else {
            x.type = "password";
        }
    }
    function myFunction2() {
        var x = document.getElementById("myInput2");
        if (x.type === "password") {
            x.type = "text";
        } else {
            x.type = "password";
        }
    }
</script>
<h2 style="color:black;">RGE College Users Accounts Registration System</h2>
<div class="alert alert-info" role="alert">
    <h4 style="color:black;">Create Students,Employees and Teacher Records On The basis Of Their Roles ,The roles list is given below to give the acces according to user roles please properly
    select user role while registration.</h4>
</div>
<div class="alert alert-danger" role="alert">
    <h4 style="color:black;">
        Note:Please do not user duplicate UserNames,Registration Ids and Registration Emails ,It Should be Unique and will not matched with any other accounts because on the behalf of RegNo
        ,User Name Each User will be Uniquely Identified and with unique Email each user will be authorized and validate by Email link For the security Purpose.

    </h4>
</div>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
 
    @Html.AntiForgeryToken()
    <h4>Create New User Account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RegistrationNo, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.RegistrationNo, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control",@id="myInput1" })
            <input type="checkbox" onclick="myFunction1()"><label style="color:black;">View Password</label>
        </div>
     
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" ,@id = "myInput2" })
            <input type="checkbox" onclick="myFunction2()"><label style="color:black;">View Password</label>
        </div>
     
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.RolesName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.RolesName, new SelectList(ViewBag.RolesList, "Value", "Text"), new { @class = "form-control" });
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
   
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
