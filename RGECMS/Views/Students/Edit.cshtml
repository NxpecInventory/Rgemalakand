@model RGECMS.Models.Students

@{
    ViewBag.Title = "Edit";
}

<div class="alert alert-info" role="alert">
    <h4 style="color:black;">Editing Student Registration Records.</h4>
</div>

@using (Html.BeginForm("Edit", "Students", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="form-horizontal">
            <h4>Edit Student Details</h4>
            <hr />


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ClassId)
            @Html.HiddenFor(model => model.CurrentSemclass)
            <div class="row">
                <div class="form-group col-sm-4 ">
                    <div class="col-md-offset-2 col-md-10 ">
                        <img src="@Url.Content(Model.Uploadimage?? "~/image")" alt="Image" height="150" width="150" class="img-circle img-responsive" />
                        <input type="file" name="ImageFile" id="ImageFile" accept="image/*" />

                    </div>
                </div>
            </div>
            <div class="row">

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.GuardianName, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.GuardianName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GuardianName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.ContactInfo, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactInfo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactInfo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.Label("Student Status", htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.AddmissionDate, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AddmissionDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddmissionDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm">
                    @Html.Label("College Program", htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProgramId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProgramId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
       

            <div class="row">
                <div class="form-group col-sm">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>

            </div>
        </div>
    </div>

}

<div class="form-group">
    <a class="btn btn-danger mt-10" href="@Url.Action("Index", "Students")">Back to List</a>
</div>
