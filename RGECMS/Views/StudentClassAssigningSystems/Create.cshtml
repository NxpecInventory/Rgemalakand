@model RGECMS.Models.StudentClassAssigningSystem

@{
    ViewBag.Title = "Create";
}

<script src="~/Scripts/jquery.min.js" type="text/javascript"></script>
<h2>Student Courses Registration System</h2>
<script type="text/javascript">
    $(document).ready(function() {
        //Dropdownlist Selectedchange event
        $("#ProgramId").change(function() {
            $("#ClassId").empty();
            $("#ClassId").append('<option value="0">--Select--</option>');
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Getallclassess")', // we are calling json method
                dataType: 'json',
                data: { id: $("#ProgramId").val() },
                success: function (subjects) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $.each(subjects,
                        function(i, state) {
                            //alert(JSON.stringify(state));
                            $("#ClassId").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }); // here we are adding option for classes
                },
                error: function(ex) {
                    alert('Failed to retrieve Available  Clasess.' + ex);
                }
            });
            return false;
        });
    });

</script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>StudentClassAssigningSystem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Studentid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StudentId", null, "---Select Student---", htmlAttributes: new { @class = "form -control" })
                @Html.ValidationMessageFor(model => model.Studentid, "", new { @class = "text-danger" })
            </div>
        </div>

     

        <div class="form-group">
            @Html.LabelFor(model => model.ProgramId, "ProgramId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProgramId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProgramId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClassId", new SelectList(string.Empty, "Value", "Text"), "---Select Class---", htmlAttributes: new { @class = "form -control" })
                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" ,@placeholder="Enter If Any!" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
