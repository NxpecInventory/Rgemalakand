@model RGECMS.Models.Teachers

@{
    ViewBag.Title = "Create";
}

<h2 style="color:black;">Create New RGE College Teacher Record</h2>

@using (Html.BeginForm("Create", "Teachers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="form-horizontal">
            <div class="alert alert-info" role="alert">
                <h3 style="color:black;">Please Provide The Following Teacher Details For Adding New Teacher Record.</h3>
            </div>
            <hr />
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.TeacherName, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TeacherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TeacherName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.ContactInfo, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactInfo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactInfo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.DesignationId, "DesignationId", htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.DropDownList("DesignationId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.Specialization, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Specialization, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Specialization, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group col-sm">
                    <div class="form-control">
                        <div class="col-md-10">
                            <input type="file" name="ImageFile" id="ImageFile" accept="image/*" />
                            @*accept="image/*"*@     @*accept="image/x-png,image/gif,image/jpeg"*@
                            </div>
                        </div>
                    </div>
            </div>


            <div class="form-group col-sm">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create Record" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div class="form-group">
    <a class="btn btn-danger mt-10" href="@Url.Action("Index", "Teachers")">Back to List</a>
</div>
