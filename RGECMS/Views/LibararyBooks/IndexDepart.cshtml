@model PagedList.IPagedList<RGECMS.Models.LibararyBooks>
@using PagedList.Mvc;
@{
    ViewBag.Title = "IndexDepart";
}
<style>
    .pagination {
        /*display: inline-block;*/
    }

        .pagination a {
            color: black;
            padding: 8px 16px;
            text-decoration: none;
        }

            .pagination a.active {
                background-color: #4CbF50;
                color: white;
            }

            .pagination a:hover:not(.active) {
                background-color: dodgerblue;
            }
</style>
<h3>RGE LIBRARY MANAGEMENT BOOKS RECORDS</h3>

@using (Html.BeginForm("index", "LibararyBooks", FormMethod.Get))
{
    <p>
        <label style="color:black;">Call No:</label>@Html.TextBox("search")
        <input type="submit" value="Search Book By Call No" placeholder="Enter Call No" class="btn btn-success card-hover" />
    </p>


}
@using (Html.BeginForm("IndexTitle", "LibararyBooks", FormMethod.Get))
{
    <p>
        <label style="color:black;">Department Name:</label>@Html.TextBox("searchtitle")
        <input type="submit" value="Search Book By Department Name" placeholder="Enter Department Name" class="btn btn-success card-hover" />
    </p>


}
@using (Html.BeginForm("IndexDepart", "LibararyBooks", FormMethod.Get))
{
    <p>
        <label style="color:black;">Title Name:</label>@Html.TextBox("searchdep")
        <input type="submit" value="Search Book By Title Name" placeholder="Enter Book Title" class="btn btn-success card-hover" />
    </p>


}
T
@if (TempData["msg"] != null)
{
    <div class="alert alert-dismissible alert-success">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <strong style="color:black">@TempData["msg"]</strong>
    </div>

}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayName("DepartmentName")
        </th>
        <th>
            @Html.DisplayName("Author")
        </th>
        <th>
            @Html.DisplayName("Title")
        </th>
        <th>
            @Html.DisplayName("Publisher/Place")
        </th>
        <th>
            @Html.DisplayName("Program")
        </th>
        <th>
            @Html.DisplayName("Year")
        </th>
        <th>
            @Html.DisplayName("Pages")
        </th>
        <th>
            @Html.DisplayName("Call No")
        </th>
        <th>
            @Html.DisplayName("EditionVolume")
        </th>
        <th>
            @Html.DisplayName("Shelf")
        </th>
        <th>
            @Html.DisplayName("Date")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LibararyDepCat.DepartmentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PublisherPlace)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Program)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pages)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CallNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EditionVolume)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Shelf)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AddedDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<a style="color:black;">Showing Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</a>


@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))


