@model RGECMS.Models.AttendanceRecordsdata

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="form-horizontal">
            <h4>AttendanceRecordsdata</h4>
            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                @Html.HiddenFor(model => model.Id)

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.Studentid, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Studentid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Studentid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.ClassId, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ClassId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.Classname, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Classname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Classname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.dataofattendance, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.dataofattendance, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dataofattendance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm">
                    @Html.LabelFor(model => model.StatusId, "StatusId", htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="form-group col-sm-4">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-sm" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="form-group">
    <a class="btn btn-danger mt-10" href="@Url.Action("Index", "AttendanceRecordsdata")">Back to List</a>
</div>

